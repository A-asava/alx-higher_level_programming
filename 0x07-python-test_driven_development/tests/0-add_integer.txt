The ``0-add_integer`` Module
============================


Using the ``add_integer`` Function
-----------------------------------


Importing the function from the module:
	>>> add_integer = __import__("0-add_integer").add_integer


checking for the docstring:
	>>> m = __import__("0-add_integer").__doc__
	>>> len(m) > 1
	True

checking for function doctsring:
	>>> f = __import__("0-add_integer").add_integer.__doc__
	>>> len(f) > 1
	True

Regular addition:
	>>> add_integer(3, 4)
	7
	
	>>> add_integer(-3, -4)
	-7

	>>> add_integer(3, -4)
	-1

Addition with float and interger:
	>>> add_integer(3.2, 4)
	7

	>>> add_integer(3, 9.5)
	12

	>>> add_integer(3, -9.5)
	-6
	
	>>> add_integer(-3, -9.5)
	-12

Checking Addition with both floats:
	>>> add_integer(3.6, 4.9)
	7

	>>> add_integer(3.6, -4.9)
	-1

	>>> add_integer(-3.6, -4.7)
	-7

Addition over multiple values:
	>>> [add_integer(i, i ** 2) for i in range(5)]
	[0, 2, 6, 12, 20]

The second argument is optional by default:
	>>> add_integer(2)
	100

checking for passed NaN:

	>>> add_integer(3, float('nan'))
	Traceback (most recent call last):
	...
	ValueError: cannot convert float NaN to integer
	
	>>> add_integer(float('nan'))
	Traceback (most recent call last):
	...
	ValueError: cannot convert float NaN to integer

checking for passed infinity:
	>>> add_integer(1, float('inf'))
	Traceback (most recent call last):
	...
	OverflowError: cannot convert float infinity to integer
	
	>>> add_integer(float('inf'))
	Traceback (most recent call last):
	 ...
	OverflowError: cannot convert float infinity to integer

Handling non-integers:
	>>> add_integer([1], 3)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

	>>> add_integer(3, "4")
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

	>>> add_integer(None)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

checking for bool with number:
	>>> add_integer(True, 4)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

	>>> add_integer(2, False)
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

Handling incorrect usage:
	>>> add_integer()
	Traceback (most recent call last):
	...
	TypeError: add_integer() missing 1 required positional argument: 'a'

	>>> add_integer(2, 4, 5)
	Traceback (most recent call last):
	...
	TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
